<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0X8nIdD0kSeXIgAAAABJRU5ErkJggg==
</value>
  </data>
</root>